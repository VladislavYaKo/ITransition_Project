@model ITransitionProject.ViewModels.EditCollectionViewModel

<form method="post" asp-action="AddCollection">
    <div asp-validation-summary="ModelOnly"></div>
    <input type="hidden" name="userId" value="@Model.UserId" />
    <div>
        <label asp-for="Name"></label><br />
        <input asp-for="Name" />
        <span asp-validation-for="Name"></span>
    </div>
    <div>
        <label asp-for="Theme"></label><br />
        <select asp-for="Theme" asp-items="Html.GetEnumSelectList<Collection.Themes>()">
            <option selected="selected" disabled="disabled">Выберите тему</option>
        </select>
        <span asp-validation-for="Theme"></span>
    </div>
    <div>
        <label asp-for="BriefDesc"></label><br />
        <input asp-for="BriefDesc" />
        <span asp-validation-for="BriefDesc"></span>
    </div>
    <div>
        <label asp-for="ImgUrl"></label><br />
        <input asp-for="ImgUrl" />
        <span asp-validation-for="ImgUrl"></span>
    </div>
    <div id="additional-fields-container">

    </div>
    <input type="button" class="btn" style="color: brown" name="AddIntField" onclick="AddIntFieldClick()" value="Добавить числовое поле">
    <input type="button" class="btn btn-danger" name="DelIntField" onclick="DelIntFieldClick()" value="Удалить числовое поле"><br />

    <input type="button" class="btn" style="color: brown" name="AddSLField" onclick="AddSLFieldClick()" value="Добавить однострочное поле">
    <input type="button" class="btn btn-danger" name="DelSLField" onclick="DelSLFieldClick()" value="Удалить однострочное поле"><br />

    <input type="button" class="btn" style="color: brown" name="AddMLField" onclick="AddMLFieldClick()" value="Добавить многострочное поле">
    <input type="button" class="btn btn-danger" name="DelMLField" onclick="DelMLFieldClick()" value="Удалить многострочное поле"><br />

    <input type="button" class="btn" style="color: brown" name="AddDateField" onclick="AddDateFieldClick()" value="Добавить поле даты">
    <input type="button" class="btn btn-danger" name="DelDateField" onclick="DelDateFieldClick()" value="Удалить поле даты"><br />

    <input type="button" class="btn" style="color: brown" name="AddBoolField" onclick="AddBoolFieldClick()" value="Добавить поле чекбокс">
    <input type="button" class="btn btn-danger" name="DelBoolField" onclick="DelBoolFieldClick()" value="Удалить поле чекбокс"><br />
    <input type="submit" class="btn btn-primary" value="Добавить коллекцию" />
</form>


@section Scripts
{
    @await Html.PartialAsync("_ValidationScriptsPartial");
    <script>
        var intFieldsCounter = { value: 0 },
            slFieldsCounter = { value: 0 },
            mlFieldCounter = { value: 0 },
            dateFieldCounter = { value: 0 },
            boolFieldCounter = { value: 0 },        
            doc = document;

        function AddIntFieldClick() {
            AddField('int-div-', 'Название числового поля', 'int-input-', 'NumericFieldName', intFieldsCounter);
        }

        function AddSLFieldClick() {
            AddField('sl-div-', 'Название однострочного поля', 'sl-input-', 'SingleLineFieldName', slFieldsCounter)
        }

        function AddMLFieldClick() {
            AddField('ml-div-', 'Название многострочного поля', 'ml-input-', 'MultiLineFieldName', mlFieldCounter);
        }

        function AddDateFieldClick() {
            AddField('date-div-', 'Название поля даты', 'date-input-', 'DateFieldName', dateFieldCounter);
        }

        function AddBoolFieldClick() {
            AddField('bool-div-', 'Название поля чекбокса', 'bool-input-', 'BoolFieldName', boolFieldCounter);
        }

        function AddField(divId, labelInner, inputId, inputName, counter) {
            if (counter.value >= 3) {
                alert('Вы не можете создать больше трёх полей!');
                return;
            }

            counter.value++;
            let addFields = doc.getElementById('additional-fields-container'),
                elemDiv = doc.createElement('div'),
                elemNameLabel = doc.createElement('label'),
                elemNameInput = doc.createElement('input'),
                elemBr = doc.createElement('br');

            elemDiv.id = divId + counter.value;
            elemNameLabel.setAttribute('for', inputId + counter.value);
            elemNameLabel.innerHTML = labelInner;
            elemNameInput.type = 'text';
            elemNameInput.maxLength = 50;
            elemNameInput.id = inputId + counter.value;
            elemNameInput.name = inputName;
            elemNameInput.setAttribute('required', '');

            elemDiv.appendChild(elemBr);
            elemDiv.appendChild(elemNameLabel);
            elemDiv.appendChild(elemBr);
            elemDiv.appendChild(elemNameInput);
            elemDiv.appendChild(elemBr);
            addFields.appendChild(elemDiv);
        }

        function DelIntFieldClick() {
            DelField('int-div-', intFieldsCounter);
        }

        function DelSLFieldClick() {
            DelField('sl-div-', slFieldsCounter);
        }

        function DelMLFieldClick() {
            DelField('ml-div-', mlFieldCounter);
        }

        function DelDateFieldClick() {
            DelField('date-div-', dateFieldCounter);
        }

        function DelBoolFieldClick() {
            DelField('bool-div-', boolFieldCounter);
        }

        function DelField(divId, counter) {
            if (counter.value <= 0)
                return;
            let delDiv = doc.getElementById(divId + counter.value);
            try {
                delDiv.parentNode.removeChild(delDiv);
                counter.value--;
            } catch(e){
                alert('Произошла ошибка: ' + e);
            }
        }
    </script>
}
