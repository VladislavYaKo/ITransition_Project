@model ITransitionProject.ViewModels.EditItemViewModel

<h2>@Model.CollectionName: @Model.CollectionTheme </h2>
<form method="post" asp-action="EditItem">
    <div asp-validation-summary="ModelOnly"></div>
    <input type="hidden" name="UserId" value="@Model.UserId" />
    <input type="hidden" name="CollectionId" value="@Model.CollectionId" />
    <input type="hidden" name="CollectionName" value="@Model.CollectionName" />
    <input type="hidden" name="CollectionTheme" value="@Model.CollectionTheme" />
    <input type="hidden" name="itemId" value="@Model.ItemId" />
    <div>
        <label asp-for="Name"></label><br />
        <input asp-for="Name" />
        <span asp-validation-for="Name"></span>
    </div>
    <div>
        <label>Тэги</label><br />
        <input type="text" id="tags-input" name="JsonTags" />
    </div>
    @for (int i = 0; i < Model.NumericFieldsNames?.Length; i++)
    {
        <label>
            @Model.NumericFieldsNames[i]: <input type="number" name="NumericFieldsValues" value="@Model.NumericFieldsValues?[i]" maxlength="15" />
        </label><br />
        <input type="hidden" name="NumericFieldsNames" value="@Model.NumericFieldsNames[i]" />
    }
    @for (int i = 0; i < Model.SLFieldsNames?.Length; i++)
    {
        <label>
            @Model.SLFieldsNames[i]: <input type="text" name="SLFieldsValues" value="@Model.SLFieldsValues[i]" maxlength="256" />
        </label><br />
        <input type="hidden" name="SLFieldsNames" value="@Model.SLFieldsNames[i]" />
    }
    @for (int i = 0; i < Model.MLFieldsNames?.Length; i++)
    {
        <label>
            @Model.MLFieldsNames[i]: <textarea name="MLFieldsValues" maxlength="1024">@Model.MLFieldsValues[i]</textarea>
        </label><br />
        <input type="hidden" name="MLFieldsNames" value="@Model.MLFieldsNames[i]" />
    }
    @for (int i = 0; i < Model.DateFieldsNames?.Length; i++)
    {
        <label>
            @Model.DateFieldsNames[i]: <input type="date" name="DateFieldsValues" value="@Model.DateFieldsValues[i]" maxlength="15" />
        </label><br />
        <input type="hidden" name="DateFieldsNames" value="@Model.DateFieldsNames[i]" />
    }
    @for (int i = 0; i < Model.BoolFieldsNames?.Length; i++)
    {
        <label>
            @Model.BoolFieldsNames[i]:
            @if (Model.BoolFieldsValues[i] == "True")
            {
                <input type="checkbox" name="BoolFieldsValues" value="@Model.BoolFieldsNames[i]" checked />
            }
            else
            {
                <input type="checkbox" name="BoolFieldsValues" value="@Model.BoolFieldsNames[i]" />
            }
        </label><br />
        <input type="hidden" name="BoolFieldsNames" value="@Model.BoolFieldsNames[i]" />
    }
    <button class="btn" style="color: darkred" formmethod="get" asp-controller="Collections" asp-action="ViewCollection">Отмена</button>
    <input type="submit" class="btn btn-success" value="Сохранить" />
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/tagify/3.22.1/tagify.min.js"
            asp-fallback-src="~/@@yaireo/tagify/dist/tagify.min.js"></script>
    <script>
        let jsonInitialTags = "@Model.JsonInitialTags",
            initialTags = JSON.parse(jsonInitialTags.replace(/(&quot\;)/g, "\"")),
            input = document.getElementById('tags-input'),
            tagify = new Tagify(input, {
                whitelist: initialTags
            }),
            jsonItemTags = "@Model.JsonTags",
            itemTags = JSON.parse(jsonItemTags.replace(/(&quot\;)/g, "\""));
        tagify.addTags(itemTags);
    </script>
}


